let Switche = externaldata(DeviceName: string, IPAddresses_0_IPAddress: string)
[h""]
with(format='csv', ignorefirstrecord=true)
| where IPAddresses_0_IPAddress != "IPAddresses_0_IPAddress"
| project ShortName = tolower(DeviceName), IPAddresses_0_IPAddress;

let IotSwitche = DeviceInfo
| where Timestamp >= ago(24h)
| where DeviceType contains "NetworkDevice"
| where DeviceSubtype contains "Switch" or DeviceSubtype contains "Router"
| where ExclusionReason != "DuplicateDevice"
| summarize arg_max(Timestamp, *) by DeviceId
| join kind=inner (DeviceNetworkInfo) on DeviceId
| extend ConnectedNetworks_0_Name = parse_json(ConnectedNetworks)[0].Name
| extend IPAddresses_0_IPAddress = tostring(parse_json(IPAddresses)[0].IPAddress)  // Cast IP to string
| summarize arg_max(Timestamp, *) by DeviceId
//| where IPAddresses contains "x.x"
| where IPAddresses_0_IPAddress !endswith_cs "255"
| extend ShortName = tolower(iif(indexof(DeviceName, ".") > 0, substring(DeviceName, 0, indexof(DeviceName, ".")), DeviceName))
| project DeviceName, IPAddresses_0_IPAddress, IPAddresses, ShortName
| sort by ShortName asc;

Switche
| join kind= leftanti (IotSwitche) on ShortName
| sort by ShortName asc

